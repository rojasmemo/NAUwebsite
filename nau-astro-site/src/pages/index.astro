---
import { sanityClient } from 'sanity:client';
import { homePageQuery } from '../lib/sanity/queries';
import type { HomePage } from '../lib/sanity/types';
import { resolveCtaLink } from '../lib/utils';
import MainLayout from '../layouts/MainLayout.astro';
import HeroBanner from '../components/HeroBanner.astro';
import SplitSection from '../components/SplitSection.astro';
import FeatureCard from '../components/FeatureCard.astro';
import SanityImage from '../components/SanityImage.astro';

// Import local assets for icons
import iconEncuentros from '../assets/images/4-BANNER-NAU-WEB.webp';
import iconSimbolismo from '../assets/images/4-BANNER-NAU-WEB.webp';

const data = await sanityClient.fetch<HomePage>(homePageQuery);

if (!data) {
  return new Response(null, {
    status: 404,
    statusText: 'No encontrado'
  });
}

const { 
  title,
  seoDescription,
  hero1,
  splitSection1,
  hero2,
  featureSection,
  splitSection2,
  hero3
} = data;

const hero1CtaLink = resolveCtaLink(hero1?.cta);
const hero2CtaLink = resolveCtaLink(hero2?.cta);
const hero3CtaLink = resolveCtaLink(hero3?.cta);

const feature1CtaLink = resolveCtaLink(featureSection?.feature1?.link);
const feature2CtaLink = resolveCtaLink(featureSection?.feature2?.link);
---

<MainLayout title={title} description={seoDescription}>

  <!-- Hero 1 -->
  {hero1?.image && (
  <HeroBanner 
    image={hero1.image}
    alt={hero1.alt || hero1.heading}
    bgColorClass="bg-custom-dark-teal"
    loading="eager"
  >
    <h2 class="h2-base">{hero1.heading}</h2>
    <p class="p-base-hero max-w-2xl mx-auto">{hero1.subheading1}</p>
    <p class="p-base-hero max-w-2xl mx-auto md:mb-4">{hero1.subheading2}</p>
    {hero1.cta?.text && (
      hero1CtaLink ? (
        <a href={hero1CtaLink} class="btn btn-primary">{hero1.cta.text}</a>
      ) : (
        <span class="btn btn-primary btn-disabled">{hero1.cta.text}</span>
      )
    )}
  </HeroBanner>
  )}

  <!-- Split Section 1 -->
  <SplitSection reverseOnMobile={true}>
    <div slot="left" class="bg-white p-4 md:py-8 rounded-lg flex flex-col justify-center">
      <div class="max-w-lg mx-auto">
        <h2 class="h2-base text-custom-dark-teal">{splitSection1.heading}</h2>
        <p class="p-base text-left">{splitSection1.paragraph1}</p>
        <p class="p-base text-left">{splitSection1.paragraph2}</p>
        <h3 class="h3-base text-custom-dark-teal text-center md:text-left">{splitSection1.subheading}</h3>
      </div>
    </div>
    {splitSection1?.image && (
    <div slot="right" class="rounded-lg overflow-hidden flex justify-center items-center">
      <div class="max-w-xs">
        <SanityImage 
          image={splitSection1.image} 
          alt={splitSection1.image.alt || 'Imagen descriptiva'}
          sizes="(max-width: 767px) 100vw, 320px"
          noShadow={true} 
        />
      </div>
    </div>
    )}
  </SplitSection>

  <!-- Hero 2 -->
  {hero2?.image && (
  <HeroBanner 
    image={hero2.image}
    alt={hero2.alt || hero2.heading}
    bgColorClass="bg-custom-dark-teal"
  >
    <h2 class="h2-base max-w-2xl mx-auto">{hero2.heading}</h2>
    <p class="p-base-hero max-w-2xl mx-auto">{hero2.subheading1}</p>
    <p class="p-base-hero max-w-2xl mx-auto md:mb-8">{hero2.subheading2}</p>
    {hero2.cta?.text && (
      hero2CtaLink ? (
        <a href={hero2CtaLink} class="btn btn-tertiary">{hero2.cta.text}</a>
      ) : (
        <span class="btn btn-tertiary btn-disabled">{hero2.cta.text}</span>
      )
    )}
  </HeroBanner>
  )}

  <!-- Feature Section -->
  <section class="py-12 md:py-16 bg-custom-pale-teal">
    <div class="max-w-[1600px] mx-auto px-6 md:px-40">
      <div class="text-center">
        <h2 class="h2-base text-custom-darker-teal mb-12 md:mb-16">{featureSection.heading}</h2>
        <div class="grid md:grid-cols-2 gap-12 md:gap-8 mb-8">
          {featureSection.feature1 && (
          <FeatureCard
            icon={iconEncuentros}
            iconAlt={featureSection.feature1.iconAlt}
            title={featureSection.feature1.title}
            link={feature1CtaLink || undefined}
            linkText={featureSection.feature1.link?.text}
          >
            <ul class="p-base list-disc list-outside text-custom-darker-teal text-left pl-4 md:pl-12 space-y-2">
              {featureSection.feature1.items.map((item: string) => <li>{item}</li>)}
            </ul>
          </FeatureCard>
          )}
          {featureSection.feature2 && (
          <FeatureCard
            icon={iconSimbolismo}
            iconAlt={featureSection.feature2.iconAlt}
            title={featureSection.feature2.title}
            link={feature2CtaLink || undefined}
            linkText={featureSection.feature2.link?.text}
          >
            <ul class="p-base list-disc list-outside text-custom-darker-teal text-left pl-4 md:pl-12 space-y-2">
              {featureSection.feature2.items.map((item: string) => <li>{item}</li>)}
            </ul>
          </FeatureCard>
          )}
        </div>
        <h3 class="h3-base text-custom-darker-teal">{featureSection.subheading}</h3>
      </div>
    </div>
  </section>

  <!-- Split Section 2 -->
  <SplitSection bgColorClass="bg-white">
    {splitSection2?.image && (
    <div slot="left" class="rounded-lg overflow-hidden flex justify-center items-center">
      <div class="max-w-sm">
        <SanityImage 
          image={splitSection2.image} 
          alt={splitSection2.image.alt || 'Imagen descriptiva'}
          sizes="(max-width: 767px) 100vw, 400px"
          noShadow={true} 
        />
      </div>
    </div>
    )}
    <div slot="right" class="bg-white text-custom-darker-teal p-4 md:p-8 rounded-lg text-center md:text-left flex flex-col justify-center items-center md:items-start">
      <div class="max-w-lg mx-auto">
        <h2 class="h2-base text-custom-dark-teal">{splitSection2.heading}</h2>
        <p class="p-base text-left">{splitSection2.paragraph1}</p>
        <p class="p-base text-left mb-6">{splitSection2.paragraph2}</p>
        <h3 class="h3-base text-custom-dark-teal text-center md:text-left mb-0">{splitSection2.subheading}</h3>
      </div>
    </div>
  </SplitSection>

  <!-- Hero 3 -->
  {hero3?.image && (
  <HeroBanner 
    image={hero3.image}
    alt={hero3.alt || hero3.heading}
    bgColorClass="bg-custom-medium-teal"
  >
    <p class="p-base-hero max-w-2xl mx-auto">{hero3.subheading1}</p>
    <h2 class="h2-base max-w-2xl mx-auto">{hero3.heading}</h2>
    {hero3.cta?.text && (
      hero3CtaLink ? (
        <a href={hero3CtaLink} class="btn btn-tertiary">{hero3.cta.text}</a>
      ) : (
        <span class="btn btn-tertiary btn-disabled">{hero3.cta.text}</span>
      )
    )}
  </HeroBanner>
  )}

</MainLayout>

<style>
  .list-disc {
    padding-left: 1.5rem; /* Ajusta este valor seg√∫n sea necesario */
  }
</style>

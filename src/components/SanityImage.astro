---
// src/components/SanityImage.astro
import { sanityClient } from 'sanity:client';
import imageUrlBuilder from '@sanity/image-url';
import type { Image as SanityImageType } from 'sanity';

const builder = imageUrlBuilder(sanityClient);

interface Props {
  image: SanityImageType;
  sizes: string;
  class?: string;
  alt?: string;
  loading?: 'lazy' | 'eager';
}

const { image: imageObj, sizes, class: className, alt: altOverride, loading = 'lazy' } = Astro.props;
const image = imageObj;

if (!image?.asset) {
  return null;
}

// Definimos los anchos estándar para el srcset
const widths = [320, 480, 640, 800, 1024, 1280, 1600, 1920, 2560];

const srcset = widths
  .map(width => {
    const url = builder.image(image).width(width).auto('format').url();
    return `${url} ${width}w`;
  })
  .join(', ');

// La URL para 'src' es la de un tamaño mediano, como fallback
const src = builder.image(image).width(800).auto('format').url();

const altText = image.alt || 'Imagen descriptiva de NAU';

const imageClasses = [
  "w-full h-auto object-cover", // Clases base
  className
].filter(Boolean).join(' ');
---

<img
  src={src}
  srcset={srcset}
  sizes={sizes}
  alt={altText}
  loading={loading}
  decoding="async"
  class={imageClasses}
/>